// 初始化Firebase
const firebaseConfig = {
    apiKey: "AIzaSyDHRYTBU74r31MPYVAAnRMwKM76c_-BduQ",
    authDomain: "tetrisonline-ca400.firebaseapp.com",
    projectId: "tetrisonline-ca400",
    storageBucket: "tetrisonline-ca400.appspot.com",
    messagingSenderId: "58207939196",
    appId: "1:58207939196:web:b34f403204096084ee37f9",
    measurementId: "G-GG7GNEQ718"
};

// 初始化Firebase应用
firebase.initializeApp(firebaseConfig);
const database = firebase.database();

// 游戏状态变量
let gameState = {
    currentPage: '2001', // 当前页面ID
    isTeacher: false,    // 是否是老师
    roomCode: '',        // 房间号
    playerName: '',      // 玩家昵称
    playerId: '',        // 玩家ID
    correctAnswers: 0,  // 正确答案数
    startTime: null,     // 游戏开始时间
    endTime: null,       // 游戏结束时间
    clickedButtons: {},  // 记录已点击的按钮
    preloadedImages: []  // 预加载的图片
};

// DOM元素
const elements = {
    gameContainer: document.getElementById('game-container'),
    joinRoomBtn: document.getElementById('join-room-btn'),
    createRoomBtn: document.getElementById('create-room-btn'),
    roomInputModal: document.getElementById('room-input-modal'),
    roomCodeInput: document.getElementById('room-code-input'),
    confirmRoomBtn: document.getElementById('confirm-room-btn'),
    nicknameInputModal: document.getElementById('nickname-input-modal'),
    nicknameInput: document.getElementById('nickname-input'),
    confirmNicknameBtn: document.getElementById('confirm-nickname-btn'),
    alertModal: document.getElementById('alert-modal'),
    alertMessage: document.getElementById('alert-message'),
    endGameBtn: document.getElementById('end-game-btn'),
    rankingList: document.getElementById('ranking-list'),
    roomCodeDisplay: document.getElementById('room-code-display'),
    playerCount: document.getElementById('player-count'),
    playerScore: document.getElementById('player-score'),
    playerAccuracy: document.getElementById('player-accuracy'),
    playerTime: document.getElementById('player-time')
};

// 初始化游戏
function initGame() {
    // 显示开始画面
    showPage('2001');
    
    // 添加事件监听器
    elements.joinRoomBtn.addEventListener('click', showRoomInputModal);
    elements.createRoomBtn.addEventListener('click', createRoom);
    elements.confirmRoomBtn.addEventListener('click', confirmRoomCode);
    elements.confirmNicknameBtn.addEventListener('click', confirmNickname);
    
    // 如果存在结束游戏按钮，添加事件监听
    if (elements.endGameBtn) {
        elements.endGameBtn.addEventListener('click', endGame);
    }
    
    // 预加载第一章节的图片
    preloadImages(['画面01.jpg', '画面02.jpg', '画面03.jpg', '画面04.jpg']);
}

// 显示指定页面
function showPage(pageId) {
    // 隐藏所有页面
    document.querySelectorAll('.game-page').forEach(page => {
        page.classList.remove('active');
    });
    
    // 显示目标页面
    const targetPage = document.getElementById(`page-${pageId}`);
    if (targetPage) {
        targetPage.classList.add('active');
        targetPage.classList.add('fade-in');
        gameState.currentPage = pageId;
        
        // 如果是排名页面，更新排名数据
        if (pageId === '2501') {
            updateRanking();
        }
        
        // 如果不是老师，更新当前页面到数据库
        if (!gameState.isTeacher && gameState.playerId) {
            updatePlayerData({
                currentPage: pageId
            });
        }
        
        // 预加载下一章节的图片
        if (pageId === '2104') {
            preloadImages(['画面05.jpg', '画面06.jpg', '画面07.jpg']);
        } else if (pageId === '2203') {
            preloadImages(['画面08.jpg', '画面09.jpg', '画面10.jpg', '画面11.jpg', '画面12.jpg']);
        } else if (pageId === '2305') {
            preloadImages(['画面13.jpg', '画面14.jpg', '画面15.jpg', '画面16.jpg', '画面17.jpg', '画面18.jpg', '画面19.jpg', '画面20.jpg', '画面21.jpg']);
        }
    }
}

// 显示房间号输入模态框
function showRoomInputModal() {
    elements.roomInputModal.style.display = 'flex';
    elements.roomCodeInput.focus();
}

// 创建房间
function createRoom() {
    gameState.isTeacher = true;
    gameState.roomCode = generateRoomCode();
    showNicknameInputModal();
}

// 生成6位随机房间号
function generateRoomCode() {
    return Math.floor(100000 + Math.random() * 900000).toString();
}

// 确认房间号
function confirmRoomCode() {
    const roomCode = elements.roomCodeInput.value.trim();
    
    if (!/^\d{6}$/.test(roomCode)) {
        showAlert('请输入有效的6位数房间号');
        return;
    }
    
    gameState.roomCode = roomCode;
    elements.roomInputModal.style.display = 'none';
    
    // 检查房间是否存在
    checkRoomExists(roomCode);
}

// 检查房间是否存在
function checkRoomExists(roomCode) {
    database.ref(`rooms/${roomCode}`).once('value')
        .then(snapshot => {
            if (snapshot.exists()) {
                showNicknameInputModal();
            } else {
                showAlert('房间号不存在');
                setTimeout(() => {
                    elements.alertModal.style.display = 'none';
                }, 3000);
            }
        })
        .catch(error => {
            console.error('检查房间时出错:', error);
            showAlert('检查房间时出错，请重试');
        });
}

// 显示昵称输入模态框
function showNicknameInputModal() {
    elements.nicknameInputModal.style.display = 'flex';
    elements.nicknameInput.focus();
}

// 确认昵称
function confirmNickname() {
    const nickname = elements.nicknameInput.value.trim();
    
    if (!nickname || nickname.length > 12) {
        showAlert('请输入有效的英文昵称(最多12字符)');
        return;
    }
    
    gameState.playerName = nickname;
    elements.nicknameInputModal.style.display = 'none';
    
    // 如果是老师，直接进入排名页面
    if (gameState.isTeacher) {
        createRoomAsTeacher();
    } else {
        joinRoomAsPlayer();
    }
}

// 作为老师创建房间
function createRoomAsTeacher() {
    gameState.playerId = 'teacher';
    gameState.startTime = Date.now();
    
    // 创建房间数据
    const roomData = {
        createdAt: firebase.database.ServerValue.TIMESTAMP,
        teacher: gameState.playerName,
        players: {}
    };
    
    database.ref(`rooms/${gameState.roomCode}`).set(roomData)
        .then(() => {
            // 跳转到排名页面
            showPage('2501');
            elements.roomCodeDisplay.textContent = `房间号: ${gameState.roomCode}`;
            
            // 监听房间变化
            listenToRoomChanges();
        })
        .catch(error => {
            console.error('创建房间时出错:', error);
            showAlert('创建房间时出错，请重试');
        });
}

// 作为玩家加入房间
function joinRoomAsPlayer() {
    gameState.playerId = generatePlayerId();
    gameState.startTime = Date.now();
    
    // 创建玩家数据
    const playerData = {
        name: gameState.playerName,
        correctAnswers: 0,
        startTime: gameState.startTime,
        currentPage: '2101',
        lastUpdated: firebase.database.ServerValue.TIMESTAMP
    };
    
    // 加入房间
    database.ref(`rooms/${gameState.roomCode}/players/${gameState.playerId}`).set(playerData)
        .then(() => {
            // 跳转到第一个游戏页面
            showPage('2101');
            
            // 监听房间变化
            listenToRoomChanges();
            
            // 初始化按钮点击事件
            initButtonEvents();
        })
        .catch(error => {
            console.error('加入房间时出错:', error);
            showAlert('加入房间时出错，请重试');
        });
}

// 生成玩家ID
function generatePlayerId() {
    return 'player_' + Math.random().toString(36).substr(2, 9);
}

// 监听房间变化
function listenToRoomChanges() {
    database.ref(`rooms/${gameState.roomCode}`).on('value', snapshot => {
        const roomData = snapshot.val();
        
        if (!roomData) {
            // 房间已被删除
            showAlert('房间已关闭');
            setTimeout(() => {
                window.location.reload();
            }, 3000);
            return;
        }
        
        // 更新排名页面数据
        if (gameState.currentPage === '2501') {
            updateRankingData(roomData);
        }
    });
}

// 更新排名数据
function updateRankingData(roomData) {
    if (!roomData.players) return;
    
    // 转换玩家数据为数组并排序
    const players = Object.entries(roomData.players)
        .filter(([id, player]) => id !== 'teacher')
        .map(([id, player]) => {
            // 计算玩家得分
            const timeInSeconds = Math.floor((Date.now() - player.startTime) / 1000);
            const timeScore = Math.floor(timeInSeconds / 60) * 2 + (timeInSeconds % 60 > 0 ? 1 : 0);
            const totalScore = Math.min(100, Math.floor(player.correctAnswers * 6.7 - timeScore));
            
            return {
                id,
                name: player.name,
                correctAnswers: player.correctAnswers || 0,
                accuracy: ((player.correctAnswers || 0) / 15 * 100).toFixed(1),
                time: formatTime(timeInSeconds),
                score: totalScore > 0 ? totalScore : 0,
                currentPage: player.currentPage || '2101',
                progress: calculateProgress(player.currentPage || '2101')
            };
        })
        .sort((a, b) => b.score - a.score);
    
    // 更新排名列表
    elements.rankingList.innerHTML = '';
    players.slice(0, 10).forEach((player, index) => {
        const playerElement = document.createElement('div');
        playerElement.className = 'ranking-item';
        playerElement.innerHTML = `
            <div>${index + 1}</div>
            <div>${player.name}</div>
            <div>${player.score}</div>
            <div>${player.accuracy}%</div>
            <div>${player.time}</div>
        `;
        elements.rankingList.appendChild(playerElement);
    });
    
    // 更新玩家统计信息
    const currentPlayer = players.find(p => p.id === gameState.playerId);
    if (currentPlayer) {
        elements.playerCount.textContent = players.length;
        elements.playerScore.textContent = currentPlayer.score;
        elements.playerAccuracy.textContent = currentPlayer.accuracy;
        elements.playerTime.textContent = currentPlayer.time;
    }
}

// 更新排名
function updateRanking() {
    database.ref(`rooms/${gameState.roomCode}`).once('value')
        .then(snapshot => {
            const roomData = snapshot.val();
            if (roomData) {
                updateRankingData(roomData);
            }
        })
        .catch(error => {
            console.error('获取排名数据时出错:', error);
        });
}

// 初始化按钮点击事件
function initButtonEvents() {
    document.querySelectorAll('.game-button').forEach(button => {
        button.addEventListener('click', handleButtonClick);
    });
}

// 处理按钮点击
function handleButtonClick(event) {
    const button = event.target;
    const pageId = gameState.currentPage;
    
    // 防止重复点击
    if (gameState.clickedButtons[pageId + button.textContent]) {
        return;
    }
    gameState.clickedButtons[pageId + button.textContent] = true;
    
    // 禁用按钮防止多次点击
    button.disabled = true;
    
    // 获取按钮属性
    const isCorrect = button.getAttribute('data-correct') === 'true';
    const nextPage = button.getAttribute('data-next');
    const hintBox = button.closest('.game-page').querySelector('.hint-box');
    
    // 如果是正确答案，增加分数
    if (isCorrect && !gameState.isTeacher) {
        gameState.correctAnswers++;
        updatePlayerData({
            correctAnswers: gameState.correctAnswers
        });
    }
    
    // 显示提示框（如果是错误答案）
    if (!isCorrect && hintBox) {
        hintBox.style.display = 'block';
        setTimeout(() => {
            hintBox.style.display = 'none';
            if (nextPage) {
                showPage(nextPage);
            }
        }, 3000);
    } else if (nextPage) {
        // 直接跳转到下一页
        showPage(nextPage);
    }
}

// 更新玩家数据
function updatePlayerData(data) {
    if (!gameState.roomCode || !gameState.playerId) return;
    
    database.ref(`rooms/${gameState.roomCode}/players/${gameState.playerId}`).update({
        ...data,
        lastUpdated: firebase.database.ServerValue.TIMESTAMP
    }).catch(error => {
        console.error('更新玩家数据时出错:', error);
    });
}

// 结束游戏
function endGame() {
    if (gameState.isTeacher) return;
    
    gameState.endTime = Date.now();
    
    // 计算最终得分
    const timeInSeconds = Math.floor((gameState.endTime - gameState.startTime) / 1000);
    const timeScore = Math.floor(timeInSeconds / 60) * 2 + (timeInSeconds % 60 > 0 ? 1 : 0);
    const totalScore = Math.min(100, Math.floor(gameState.correctAnswers * 6.7 - timeScore));
    
    // 更新玩家最终数据
    updatePlayerData({
        correctAnswers: gameState.correctAnswers,
        endTime: gameState.endTime,
        score: totalScore
    });
    
    // 跳转到排名页面
    showPage('2501');
    elements.roomCodeDisplay.textContent = `房间号: ${gameState.roomCode}`;
}

// 计算进度百分比
function calculateProgress(pageId) {
    const pageNumber = parseInt(pageId.replace(/^2[1-4]0?/, ''));
    return Math.floor((pageNumber / 21) * 100);
}

// 格式化时间
function formatTime(seconds) {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;
}

// 显示提示框
function showAlert(message) {
    elements.alertMessage.textContent = message;
    elements.alertModal.style.display = 'flex';
    
    setTimeout(() => {
        elements.alertModal.style.display = 'none';
    }, 3000);
}

// 预加载图片
function preloadImages(imageNames) {
    imageNames.forEach(imageName => {
        // 检查是否已经预加载过
        if (gameState.preloadedImages.includes(imageName)) {
            return;
        }
        
        const img = new Image();
        img.src = `images/${imageName}`;
        gameState.preloadedImages.push(imageName);
    });
}

// 当DOM加载完成后初始化游戏
document.addEventListener('DOMContentLoaded', initGame);
